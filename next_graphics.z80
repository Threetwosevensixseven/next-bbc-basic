;
; Title:	BBC Basic Interpreter - Z80 version
;		Spectrum Next Graphics Routines
; Author:	Dean Belfield
; Created:	06/05/2021
; Last Updated:	09/05/2021
;
; Modinfo:
; 09/05/2021:	Added Plot modes for Plot_ULA.
;		Plot_ULA now takes scroll position into account

			MODULE	NEXT_GRAPHICS 

; Plot a point
; HL: Y
; DE: X
;  A: Colour
;  C: Mode:
;
;     0: Plot the colour		4: NOT (invert) the screen colour
;     1: OR with the screen colour	5: No change
;     2: AND with the screen colour	6: Clear the colour (set to 0)
;     3: XOR with the screen colour
;     
;     For ULA, 0 and 1 set the pixel, 2 and 6 clear the pixel and 3 and 4 invert the pixel
;
Plot:			LD	B, A 		; Store colour in B
			LD	A, C 		; Check mode
			CP	7 		; If >= 7 then
			RET	NC 		; dont do anything
			ADD	A, A 		; Multiply by 2 for indexing into lookup later
			LD	C, A  		; Store back in C
			LD	A, H		; Screen boundary check
			OR	D
			RET	NZ
			LD	A, D
			CP	192
			RET	NC
			LD	A, (VIDEO_MODE)
			OR	A 
			JR	Z, Plot_ULA 	; MODE 0
			DEC	A 
			JR	Z, Plot_L2	; MODE 1
			RET

; Plot the point on the ULA screen
;	
Plot_ULA		LD	A, (SCRLPOS_Y)	; Get Y scroll position
			ADD	A, A
			ADD	A, A 
			ADD	A, A 		; Multiply by 8
			ADD	A, L 		; Add to pixel Y position
			JR	C, 0F 		; If we've wrapped, then skip
			CP	192		; Gone off screen?
			JR	C, 1F 
0:			SUB	192
1:			LD	D, A 		; D = Y, E = X
			PIXELAD			; Get the pixel address in HL
			SETAE			; Get pixel mask in A
			EX	DE, HL		; DE: Screen address
			LD	L, A 		;  L: Pixel mask
			LD	A, C 		;  A: Plot mode * 2
			LD	C, L 		;  C: Pixel mask
			LD	HL, Plot_ULA_Table 
			ADD	HL, A 
			LD	A, (HL)
			INC	HL
			LD	H, (HL)
			LD	L, A
			JP	(HL) 

Plot_ULA_OR:		EX	DE, HL
			LD	A, (HL) 
			OR	C		; Or with screen
			LD	(HL), A
			JR	Plot_ULA_Attribute

Plot_ULA_AND:		EX	DE, HL 
			LD	A, C
			CPL 
			AND	(HL)
			LD	(HL), A 
			JR	Plot_ULA_Attribute 

Plot_ULA_XOR:		EX	DE, HL 
			LD	A, (HL)
			XOR	C 
			LD	(HL), A
			JR	Plot_ULA_Attribute 

Plot_ULA_NOP:		RET

; Plot table
;
Plot_ULA_Table:		DW	Plot_ULA_OR,  Plot_ULA_OR,  Plot_ULA_AND, Plot_ULA_XOR 
			DW	Plot_ULA_XOR, Plot_ULA_NOP, Plot_ULA_AND 

; Write colour value out to ULA attribute map
; HL: Address in ULA pixel map
;  B: Colour to write out
;			
Plot_ULA_Attribute:	LD	A, H 		; Get the attribute address from the screen address
			RRA
			RRA 
			RRA 
			AND 	3 
			OR	88
			LD	H, A 
			LD	(HL), B		; Write the colour out
			RET

; Plot the point on Layer 2
;
Plot_L2:		LD	D, L 		; D = Y, E = X
			PUSH	BC
			CALL	L2_Get_Pixel_Address
			POP	BC
			LD	(HL), B		; Write the colour out
			RET

; Get pixel position
; Pages in the correct 16K Layer 2 screen bank into 0x0000
; D: Y coordinate
; E: X coordinate
; Returns:
; HL: Address in memory (between 0x0000 and 0x3FFF)
;
L2_Get_Pixel_Address:	LD 	L,E			; The low byte is the X coordinate
			LD	A,D			; Get the Y coordinate
			AND	0x3F			; Offset in bank
			LD	H,A			; Store in high byte
			LD	A,D			; Get the Y coordinate
			AND	0xC0			; Get the bank number
			OR	%00000011		; Set visible/write bits
			LD	BC,0x123B		; Port #
			OUT	(C),A 			; Page in the screen bank
			RET

; A: Colour to fill with
;
L2_Clear_Screen:	LD	C, %00000011
			CALL 	1F
			LD	C, %01000011
			CALL 	1F
			LD	C, %10000011
1:			PUSH	AF
			LD	A,C
			LD	BC, 0x123B
			OUT	(C),A
			POP	AF
			PUSH	AF
			LD	DE,0x0000
			LD	BC,0x4000
			CALL	FillDMA
			POP	AF
			RET

			ENDMODULE