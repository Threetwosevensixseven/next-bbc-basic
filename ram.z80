;
; Title:	BBC Basic Interpreter - Z80 version
;		RAM Module for BBC Basic Interpreter
;		For use with Version 2.0 of BBC BASIC
;		Standard CP/M Distribution Version
; Author:	(C) Copyright  R.T.Russell 31-12-1983
; Modified By:	Dean Belfield
; Created:	02/05/2021
; Last Updated:	28/05/2021
;
; Modinfo:
; 02/05/2021:	Modified by Dean Belfield to assemble with SJASMPLUS
; 10/05/2021:	Moved Next RAM variables from build.z80 into here
; 15/05/2021:	Added PLOTPRE_X and PLOTPRE_Y; VDU_BUFFER now shared with BUFFER
; 17/05/2021:	TEXT_COLOUR now split into TEXT_FOREGROUND and TEXT_BACKGROUND; Added BORDER_COLOUR
; 19/05/2021:	Added CURSOR_X and CURSOR_Y
; 21/05/2021:	Added KEYSCAN and KEYREPEAT
; 23/05/2021:	Added FH and FBUFFER
; 24/05/2021:	FBUFFER reuses ACCS
; 25/05/2021:	Added FDRIVE, CPU_SPEED
; 26/05/2021:	Added CHAR_COLS, CHAR_ROWS
; 28/05/2021:	Added PIXEL_WIDTH, PIXEL_HEIGHT

			MODULE RAM

			ALIGN 	256		; Align to page boundary

Start:			EQU 	$
;
; ACCS, BUFFER & STAVAR must be on page boundaries.
;
@ACCS:			DEFS    256             ; STRING ACCUMULATOR
@BUFFER:		DEFS    256             ; STRING INPUT BUFFER
@STAVAR:		DEFS    27*4            ; STATIC VARIABLES
@OC:			EQU     STAVAR+15*4     ; CODE ORIGIN (O%)
@PC:			EQU     STAVAR+16*4     ; PROGRAM COUNTER (P%)
@DYNVAR: 		DEFS    54*2            ; DYN. VARIABLE POINTERS
@FNPTR:  		DEFS    2               ; DYN. FUNCTION POINTER
@PROPTR: 		DEFS    2               ; DYN. PROCEDURE POINTER
;
@PAGE:   		DEFS    2               ; START OF USER PROGRAM
@TOP:    		DEFS    2               ; FIRST LOCN AFTER PROG.
@LOMEM:  		DEFS    2               ; START OF DYN. STORAGE
@FREE:   		DEFS    2               ; FIRST FREE-SPACE BYTE
@HIMEM:  		DEFS    2               ; FIRST PROTECTED BYTE
;
@LINENO: 		DEFS    2               ; LINE NUMBER
@TRACEN:		DEFS    2               ; TRACE FLAG
@AUTONO:		DEFS    2               ; AUTO FLAG
@ERRTRP:		DEFS    2               ; ERROR TRAP
@ERRTXT:		DEFS    2               ; ERROR MESSAGE POINTER
@DATPTR:		DEFS    2               ; DATA POINTER
@ERL:			DEFS    2               ; ERROR LINE
@ERRLIN:		DEFS    2               ; "ON ERROR" LINE
@RANDOM:		DEFS    5               ; RANDOM NUMBER
@COUNT:			DEFS    1               ; PRINT POSITION
@WIDTH:			DEFS    1               ; PRINT WIDTH
@ERR:			DEFS    1               ; ERROR NUMBER
@LISTON:		DEFS    1               ; LISTO & OPT FLAG
@INCREM:		DEFS    1               ; AUTO INCREMENT
;
; Extra Next-implementation specific system variables
;
@VDU_BUFFER:		EQU	ACCS		; Storage for VDU commands
@DOS_BUFFER:		EQU	ACCS		; Storage for DOS commands
;
@R00:			DEFS	1		; General purpose register stores
@R01:			DEFS 	1		; Leave here - at top of page boundary
@R02:			DEFS	1
@R03:			DEFS	1
@R04:			DEFS	1
@R05:			DEFS 	1	
@R06:			DEFS	1
@R07:			DEFS	1
@R08:			DEFS	1
@R09:			DEFS	1
@R10:			DEFS	1
@R11:			DEFS	1
@R12:			DEFS 	1
@R13:			DEFS 	1
@R14:			DEFS 	1
@R15:			DEFS 	1
@R16:			DEFS 	1
@R17:			DEFS 	1
@R18:			DEFS 	1
@R19:			DEFS 	1
;
@FLAGS:			DEFS	1		; Flags: B7=ESC PRESSED, B6=ESC DISABLED, B5=CAPS LOCK, B4=COPY PRESSED, B3=SHOW CURSOR
@KEYSCAN:		DEFS	2		; Results of last keyscan
@KEYREPEAT:		DEFS	1		; Key repeat counter
@KEYCODE:		DEFS	1		; Keycode updated by keyscan
@TIME:			DEFS	4	
@VIDEO_MODE:		DEFS	1		; Video mode
@TEXT_FOREGROUND:	DEFS 	1		; Text foreground colour (Layer 2) or attribute (ULA)
@TEXT_BACKGROUND:	DEFS	1		; Text background (Layer 2 only)
@BORDER_COLOUR:		DEFS	1
@CURSOR_X:		DEFS	1		; Edit cursor position on screen
@CURSOR_Y:		DEFS	1
@CHARPOS_X:		DEFS	1		; Current character position on screen
@CHARPOS_Y:		DEFS	1
@PLOTPRE_X:		DEFS	2 		; Previous plot position
@PLOTPRE_Y:		DEFS	2
@PLOTPOS_X:		DEFS	2		; Current plot position on screen
@PLOTPOS_Y:		DEFS	2
@SCRLPOS_Y:		DEFS	1		; Y scroll offset (in characters)
@VDU_STATE:		DEFS	1		; VDU state
@VDU_PTR:		DEFS	1		; Pointer into VDU buffer
@VDU_COUNT:		DEFS	1		; VDU count of characters left to read
@PLOT_MODE:		DEFS	1		; Plot mode as set by GCOL
@PLOT_COLOUR:		DEFS	1		; Plot colour as set by GCOL
@RTC_SIG:		DEFS 	2		; Storage for last-read RTC data				
@RTC_SEC:		DEFS 	1		
@RTC_MIN:		DEFS 	1	
@RTC_HOUR:		DEFS 	1	
@RTC_DAY:		DEFS 	1		 
@RTC_DATE:		DEFS 	1	
@RTC_MONTH:		DEFS 	1	
@RTC_YEAR:		DEFS	1
@FH:			DEFS	1		; File handle store
@FDRIVE:		DEFS	1		; Current drive
@CPU_SPEED:		DEFS	1	
@CHAR_COLS:		DEFS	1		; Screen dimensions (characters)
@CHAR_ROWS:		DEFS	1
@PIXEL_WIDTH:		DEFS	2		; Screen dimensions (pixels)
@PIXEL_HEIGHT:		DEFS	2	
;
@LX1			DEFS	2		; TEMP: TODO REMOVE
@LY1			DEFS	2
@LX2			DEFS 	2
@LY2			DEFS	2

Length:			EQU	$ - Start

			ENDMODULE